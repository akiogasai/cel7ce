TODO v1.0.0
-----------
x Fix key naming
- Janet support
  x Add "shebang" to allow janet code to be embedded in binary
  - Lock down or remove Janet's stdlib
- Cleanly throw errors
  x Invalid API calls
  x Bad memory bank accesses
  - Invalid config values
- Revamp str* fe functions
  - strlen ⇒ #
  - strat  ⇒ @
  - Fix string truncations
x Create and use new font
- Lore
  - README
  - Landing page
  - Manpage
  - help message
  - Documentation
    - APIs
    - Sprite format
    - Color format
- Retrieve source for tetris
- Switch away from args.h
  - (It can't handle options that come after args.)
- Switch to meson/muon + ninja/samurai for build system

TODO v1.1.0
-----------
- Pass `ctrl` argument to keydown()
- Cartridges (.bmp or .gif)
  - "Block filesystem" on cartridge for storing highscores
    - Writing data to block changes cartridge look
    - Accessible via additional memory bank
  - Tape/floppy look
- ESC menu as with TIC-80 (needs minimum screen size)
  - menuitem() API
  - about screen (cel7ce source, homepage, repo, etc)
  - reload cartridge
  - view cartridge source
  - view cartridge info (author, date, etc)
- Fix recording issues
  - Choose another method of storing frames to conserve memory
    - Perhaps do palette extraction on draw() instead of afterwards?
  - Record delay between frames

TODO <future>
-------------
- FreeBSD support
- OpenBSD support
  - pledge/unveil usage
- web version

Misc
----
- Improve Janet docs
  - Note that one must call janet_string before janet_wrap_string
  - Document janet_def and janet_resolve
  - Provide example of pcall + error handling
- Improve fe docs
  - Example for variadic args with cfunction
- fe patches
  - Make fe_error sprintf-like

Ideas
-----
- Joystick support?
- New memory locations
  - Raspberry Pi GPIO
  - Current color(s)
  - Mode
  - Height/width/scale
  - cel7 version
- Builtin console
  - Might be too difficult due to variadic window sizing
- Builtin editor/viewer
- Token limits, as with PICO-8
  - Interesting, but a bit un-cel7y
- Up to 7 colors for sprites
  - Would break display format...
    - Alternative buffer/bank?
    - Or optional display mode switching API that changes display buffer layout
      to work with this...
- New APIs:
  - flr()
  - mid()
  - camera()
- Network abstraction APIs
  - conn(), recv(), send(), gbye()
  - libtls, libretls, or libtls-bearssl
  - would allow writing:
    - a tiny documentation viewer for online docs
    - a gemini/gopher client
    - client for klud.ge
